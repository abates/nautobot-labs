---
x-nautobot-base: &nautobot-base
  image: "ghcr.io/nautobot/nautobot:${NAUTOBOT_VER}-py${PYTHON_VER}"
  environment:
      - "NAUTOBOT_DB_ENGINE=django.db.backends.postgresql"
  env_file:
    - "../nautobot/nautobot.env"
    - "../nautobot/creds.env"
  volumes:
    - "../nautobot/startup.sh:/opt/nautobot/startup.sh"
    - "../nautobot/labpath.sh:/etc/profile.d/labpath.sh"
    - "../nautobot/nautobot_config.py:/opt/nautobot/default_nautobot_config.py"
  tty: true

version: "3.8"
services:
  nautobot:
    command: /opt/nautobot/startup.sh
    ports:
      - "8080"
    depends_on:
      redis:
        condition: "service_started"
      db:
        condition: "service_healthy"
    <<: *nautobot-base
  worker:
    entrypoint:
      - "sh"
      - "-c"  # this is to evaluate the $NAUTOBOT_LOG_LEVEL from the env
      - "nautobot-server celery worker -l $$NAUTOBOT_LOG_LEVEL"  ## $$ because of docker-compose
    depends_on:
      - "nautobot"
    healthcheck:
      interval: "30s"
      timeout: "10s"
      start_period: "30s"
      retries: 3
      test: ["CMD", "bash", "-c", "nautobot-server celery inspect ping --destination celery@$$HOSTNAME"]  ## $$ because of docker-compose
    <<: *nautobot-base

  redis:
    image: "redis:6-alpine"
    command:
      - "sh"
      - "-c"  # this is to evaluate the $NAUTOBOT_REDIS_PASSWORD from the env
      - "redis-server --appendonly yes --requirepass $$NAUTOBOT_REDIS_PASSWORD"
    env_file:
      - "../nautobot/nautobot.env"
      - "../nautobot/creds.env"

  db:
    image: "postgres:13-alpine"
    env_file:
      - "../nautobot/nautobot.env"
      - "../nautobot/creds.env"
    volumes:
      # - "./nautobot.sql:/tmp/nautobot.sql"
      - "postgres_data:/var/lib/postgresql/data"
    healthcheck:
      test: "pg_isready --username=$$POSTGRES_USER --dbname=$$POSTGRES_DB"
      interval: "10s"
      timeout: "5s"
      retries: 10

volumes:
  postgres_data: {}
